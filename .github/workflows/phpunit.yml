name: PHPUnit

on:
  pull_request:
  push:
    branches:
      - master
      - stable*

env:
  APP_NAME: recognize

permissions:
  contents: read

jobs:
  php:
    runs-on: ubuntu-latest

    strategy:
      # do not stop on another job's failure
      fail-fast: false
      matrix:
        php-versions: ['7.4', '8.0', '8.1']
        databases: ['sqlite', 'mysql', 'pgsql']
        server-versions: ['stable25', 'master']
        imagick: ['']
        s3: ['']
        container: ['']
        include:
          - server-versions: stable25
            php-versions: 8.0
            databases: sqlite
            container: nextcloud:fpm-alpine
          - server-versions: master
            php-versions: 8.0
            databases: sqlite
            container: nextcloud:fpm-alpine
          - server-versions: stable25
            php-versions: 8.0
            databases: sqlite
            imagick: 'imagick'
          - server-versions: stable25
            php-versions: 8.0
            databases: mysql
            s3: s3
          - server-versions: master
            php-versions: 8.0
            databases: mysql
            s3: s3

    name: php${{ matrix.php-versions }} ${{ matrix.databases }} ${{ matrix.server-versions }} ${{ matrix.container }} ${{ matrix.s3 }} ${{ matrix.imagick }}

    container: ${{ matrix.container }}

    services:
      mysql:
        image: mariadb:10.5
        ports:
          - 4444:3306/tcp
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
        options: --health-cmd="mysqladmin ping" --health-interval 5s --health-timeout 2s --health-retries 5
      postgres:
        image: postgres
        ports:
          - 4445:5432/tcp
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: rootpassword
          POSTGRES_DB: nextcloud
        options: --health-cmd pg_isready --health-interval 5s --health-timeout 2s --health-retries 5
      s3:
        # See https://stackoverflow.com/questions/64031598/creating-a-minios3-container-inside-a-github-actions-yml-file
        image: bitnami/minio
        ports:
          - 9000:9000/tcp
        volumes:
          - minio_data:/data
        env:
          MINIO_ROOT_USER: minioadmin
          MINIO_ROOT_PASSWORD: minioadmin

    steps:
      - name: Get Alpine Linux ready
        if: ${{ matrix.container != ''}}
        run: |
          apk update
          apk upgrade
          apk add bash
          apk add wget
          apk add git
          apk add unzip
          apk add composer
          apk add nodejs
          apk add npm
          apk add make
          apk add curl
          apk add grep
          apk add php8
          apk add php8-tokenizer
          apk add php8-dom
          apk add php8-xml
          apk add php8-xmlwriter
          apk add php8-ctype


      - name: Checkout server
        uses: actions/checkout@v2
        with:
          repository: nextcloud/server
          ref: ${{ matrix.server-versions }}

      - name: Checkout submodules
        shell: bash
        run: |
          git config --global --add safe.directory /__w/recognize/recognize
          git submodule sync --recursive
          git submodule update --init --force --recursive --depth=1

      - name: Checkout app
        uses: actions/checkout@v2
        with:
          path: apps/${{ env.APP_NAME }}

      - name: Set up php ${{ matrix.php-versions }}
        if: ${{ matrix.container == ''}}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          tools: phpunit
          extensions: mbstring, iconv, fileinfo, intl, mysql, pdo_mysql, gd, zip, ${{ matrix.imagick }}
          coverage: none

      - name: Install app
        if: ${{ matrix.container == ''}}
        working-directory: apps/${{ env.APP_NAME }}
        run: |
          composer install --ignore-platform-req=php --no-dev
          composer require phpunit/phpunit=^9.5
          make all
          make remove-binaries # Make it download tfjs from scratch
          rm -rf models # Make it download from github
          wget https://github.com/nextcloud/recognize/releases/download/v2.2.0/test-files.zip
          unzip test-files.zip -d test/res/

      - name: Install app on Alpine
        if: ${{ matrix.container != ''}}
        working-directory: apps/${{ env.APP_NAME }}
        run: |
          composer install --ignore-platform-req=php --no-dev
          composer require phpunit/phpunit=^9.5
          npm ci --ignore-scripts
          npm run build
          mkdir -p bin
          rm -rf models
          wget https://github.com/nextcloud/recognize/releases/download/v2.2.0/test-files.zip
          unzip test-files.zip -d test/res/

      - name: Configure s3
        if: ${{matrix.s3 != ''}}
        working-directory: config/
        run: |
          cat << "EOF" > s3.config.php
          <?php
          $CONFIG = [
            'objectstore' => array (
              'class' => 'OC\\Files\\ObjectStore\\S3',
              'arguments' => array (
                'bucket' => 'nextcloud-dev',
                'key' => 'minioadmin',
                'secret' => 'minioadmin',
                'hostname' => 'localhost',
                'port' => '9000',
                'use_ssl' => false,
                'use_path_style' => true,
              ),
            ),
          ];
          EOF

      - name: Set up Nextcloud with mysql
        if: ${{matrix.databases == 'mysql' }}
        env:
          DB_PORT: 4444
        run: |
          sleep 25
          mkdir data
          ./occ maintenance:install --verbose --database=${{ matrix.databases }} --database-name=nextcloud --database-host=127.0.0.1 --database-port=$DB_PORT --database-user=root --database-pass=rootpassword --admin-user admin --admin-pass password
          ./occ app:enable ${{ env.APP_NAME }}
          php -S localhost:8080 &

      - name: Set up Nextcloud with pgsql/sqlite
        if: ${{matrix.databases != 'mysql' }}
        env:
          DB_PORT: 4445
        run: |
          sleep 25
          mkdir data
          ./occ maintenance:install --verbose --database=${{ matrix.databases }} --database-name=nextcloud --database-host=127.0.0.1 --database-port=$DB_PORT --database-user=root --database-pass=rootpassword --admin-user admin --admin-pass password
          ./occ app:enable ${{ env.APP_NAME }}
          php -S localhost:8080 &

      - name: PHPUnit
        working-directory: apps/${{ env.APP_NAME }}
        run: ./vendor/bin/phpunit -c test/phpunit.xml

      - name: Show log
        if: always()
        run: |
          tail -50 data/nextcloud.log
